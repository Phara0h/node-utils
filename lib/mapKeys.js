'use strict';

/**
   * This method creates an object with the
   * same values as `object` and keys generated by running each own enumerable
   * string keyed property of `object` thru `iteratee`. The iteratee is invoked
   * with two arguments: (value, key).
   *
   * @param {Object} object The object to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Object} Returns the new mapped object.
   * @example
   *
   * mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
   *   return key + value;
   * });
   * // => { 'a1': 1, 'b2': 2 }
   */
function mapKeys(object, iteratee) {
    const keys = Object.keys(object);
    let newObj = {};

    for (var i = 0; i < keys.length; i++) {
        newObj[iteratee(object[keys[i]], keys[i])] = object[keys[i]];
    }

    return newObj;
};
module.exports = mapKeys;
